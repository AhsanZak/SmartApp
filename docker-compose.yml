version: '3.8'

services:
  # PostgreSQL with pgvector extension
  postgres:
    image: pgvector/pgvector:pg16
    container_name: smtapp_postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-smtapp}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-smtapp123}
      POSTGRES_DB: ${POSTGRES_DB:-smtapp_db}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U smtapp"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - smtapp_network

  # Ollama service for local LLM models
  ollama:
    image: ollama/ollama:latest
    container_name: smtapp_ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    networks:
      - smtapp_network

  # FastAPI Backend
  backend:
    build:
      context: ./smtapp_core
      dockerfile: Dockerfile
    container_name: smtapp_backend
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-smtapp}:${POSTGRES_PASSWORD:-smtapp123}@postgres:5432/${POSTGRES_DB:-smtapp_db}
      - OLLAMA_BASE_URL=http://ollama:11434
    ports:
      - "8000:8000"
    volumes:
      - ./smtapp_core:/app
      - uploads_data:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
      ollama:
        condition: service_started
    networks:
      - smtapp_network
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  # React Frontend
  frontend:
    build:
      context: ./smtapp_client
      dockerfile: Dockerfile
    container_name: smtapp_frontend
    ports:
      - "3000:3000"
    volumes:
      - ./smtapp_client:/app
      - /app/node_modules
    depends_on:
      - backend
    environment:
      - REACT_APP_API_URL=http://localhost:8000
    networks:
      - smtapp_network

volumes:
  postgres_data:
  ollama_data:
  uploads_data:

networks:
  smtapp_network:
    driver: bridge

